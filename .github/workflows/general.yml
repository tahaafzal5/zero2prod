name: General

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.7.1
  SQLX_FEATURES: "rustls,postgres"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Checkout toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Load .env file
        uses: aarcangeli/load-dotenv@v1.0.0

      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        run:
            cargo install sqlx-cli
            --version=${{ env.SQLX_VERSION }}
            --features ${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked
      
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh
      
      - name: Check sqlx-data.json is up-to-date
        run: cargo sqlx prepare --database-url ${{ env.DATABASE_URL }} --workspace --check

      - name: Run tests
        run: cargo test

  formatting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Checkout toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install rustfmt
        run: rustup component add rustfmt
      
      - name: Run rustfmt
        run: cargo fmt --check

  linting:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Checkout toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
            --version=${{ env.SQLX_VERSION }}
            --features ${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh
      
      - name: Linting
        run: cargo clippy -- -D warnings
        
  coverage:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Checkout toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install libpq
        run: sudo apt-get update && sudo apt-get install postgresql-client -y
      
      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin
      
      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked
      
      - name: Migrate database
        run: SKIP_DOCKER=true ./scripts/init_db.sh
      
      - name: Generate code coverage
        run: cargo tarpaulin --verbose --workspace --ignore-tests