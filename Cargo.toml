[package]
name = "zero2prod"
version = "0.1.0"
edition = "2021"

[lib]
path = "src/lib.rs"

[[bin]]
path = "src/main.rs"
name = "zero2prod"

[dependencies]
actix-web = "4"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
config = { version = "0.13", default-features = false, features = ["yaml"] }
chrono = { version = "0.4.22", default-features = false, features = ["clock"] }
uuid = { version = "1", features = ["v4"] }

# We need the optional `derive` feature to use `serde`'s procedural macros:
# `#[derive(Serialize)]` and `#[derive(Deserialize)]`.
# The feature is not enabled by default to avoid pulling in
# unnecessary dependencies for projects that do not need it.
serde = { version = "1", features = ["derive"] }

# Using table-like toml syntax to avoid a super-long line
[dependencies.sqlx]
version = "0.7"
default-features = false
features = [
    "runtime-tokio-rustls", # tells sqlx to use the tokio runtime for its futures and rustls as TLS backend
    "macros",               # give us acces to sqlx::query! and sqlx::query_as! macros
    "postgres",             # unlocks Postgres-specific functionality (e.g. non-standard SQL types)
    "uuid",                 # adds support for mapping SQL UUIDs to the Uuid type from the uuid crate
    "chrono",               # adds support for mapping SQL timestamptz to the DateTime<T> type from the chrono crate
    "migrate",              # gives us access to the same functions used under the hood by sqlx-cli to manage migrations so we use them in our test suite
]

# Dependencies for tests and examples
[dev-dependencies]
reqwest = "0.11"

[lints.clippy]
expect_fun_call = "allow"
